"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const route = express_1.default.Router();
const userController_1 = __importDefault(require("../../adapter/userController"));
const userRepository_1 = __importDefault(require("../repository/userRepository"));
const tradesmanRepository_1 = __importDefault(require("../repository/tradesmanRepository"));
const tradesmanUsecase_1 = __importDefault(require("../../use_case/tradesmanUsecase"));
const userUsecase_1 = __importDefault(require("../../use_case/userUsecase"));
const hashPassword_1 = __importDefault(require("../utils/hashPassword"));
const jwtCreate_1 = __importDefault(require("../utils/jwtCreate"));
const sendMail_1 = __importDefault(require("../utils/sendMail"));
const generateOtp_1 = __importDefault(require("../utils/generateOtp"));
const otpRepository_1 = __importDefault(require("../repository/otpRepository"));
const otpUsecase_1 = __importDefault(require("../../use_case/otpUsecase"));
const cloudinary_1 = __importDefault(require("../utils/cloudinary"));
const fileOperations_1 = __importDefault(require("../utils/fileOperations"));
const toolRepository_1 = __importDefault(require("../repository/toolRepository"));
const toolUsecase_1 = __importDefault(require("../../use_case/toolUsecase"));
const multer_1 = require("../middlewares/multer");
const userAuth_1 = __importDefault(require("../middlewares/userAuth"));
const encrypt = new hashPassword_1.default();
const jwtCreate = new jwtCreate_1.default();
const generateOtp = new generateOtp_1.default();
const sendMail = new sendMail_1.default();
const cloudinary = new cloudinary_1.default();
const fileOperations = new fileOperations_1.default();
const repository = new userRepository_1.default();
const useCase = new userUsecase_1.default(repository, encrypt, jwtCreate);
const tradesmanRepository = new tradesmanRepository_1.default();
const tradesmanUsecase = new tradesmanUsecase_1.default(tradesmanRepository, jwtCreate);
const otpRepository = new otpRepository_1.default();
const otpUsecase = new otpUsecase_1.default(otpRepository, encrypt);
const toolRepository = new toolRepository_1.default();
const toolUsecase = new toolUsecase_1.default(toolRepository);
const controller = new userController_1.default(useCase, generateOtp, sendMail, otpUsecase, tradesmanUsecase, cloudinary, fileOperations, toolUsecase);
route.post("/signup", (req, res, next) => controller.signUp(req, res, next));
route.post("/signup-verify", (req, res, next) => controller.signUpVerify(req, res, next));
route.post("/resent-otp", (req, res, next) => controller.resentOtp(req, res, next));
route.post("/forgot-password", (req, res, next) => controller.forgotPassword(req, res, next));
route.post("/forgot-password-verify", (req, res, next) => controller.forgotPasswordVerifyOtp(req, res, next));
route.post("/forgot-password-change", (req, res, next) => controller.forgotPasswordChange(req, res, next));
route.post("/google-signup", (req, res, next) => controller.socialLogin(req, res, next));
route.get("/get-tradesmen", (req, res, next) => controller.getTradesmen(req, res, next));
route.get("/get-all-tradesmen", (req, res, next) => controller.getAllTradesmen(req, res, next));
route.post("/add-tool", multer_1.Multer.array("images"), userAuth_1.default, (req, res, next) => controller.addTool(req, res, next));
route.get("/get-tools", (req, res, next) => controller.getTools(req, res, next));
route.get("/get-my-tools", (req, res, next) => controller.getMyTools(req, res, next));
route.get("/get-user-info/:userId", (req, res, next) => controller.getUserInfo(req, res, next));
route.get("/get-skills", (req, res, next) => controller.getAllSkills(req, res, next));
route.patch("/update-user", userAuth_1.default, multer_1.Multer.single("image"), (req, res, next) => controller.updateUserData(req, res, next));
exports.default = route;
//# sourceMappingURL=userRoute.js.map